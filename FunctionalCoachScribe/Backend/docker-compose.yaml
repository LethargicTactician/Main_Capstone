version: "latest"

networks:
  netCapstone:

services:
  CapstoneUserTest:
    container_name: CapstoneUserTest
    image: mongo:latest
    restart: always
    hostname: CapstoneUserTest
    ports:
      - "27019:27019"
    networks:
      - netCapstone

  CAPEurekaRegistry:
    container_name: CAPEurekaRegistry
    image: steeltoeoss/eureka-server:latest
    restart: always
    hostname: CAPEurekaRegistry
    ports:
      - 8761:8761
    networks:
      - netCapstone

  CAPAPIGatewayOcelot:
    container_name: CAPAPIGatewayOcelot
    build:
      context: ./dotnet-apigateway-ocelot
      dockerfile: /Dockerfile
    image: capocelotgatewayapi:1
    restart: always
    hostname: CAPAPIGatewayOcelot
    ports:
      - 5041:80
    networks:
      - netCapstone

  CapstoneDBRedis:
    container_name: CapstoneDBRedis
    image: redis:latest
    restart: always
    hostname: CapstoneDBRedis
    ports:
      - "6379:6379"
    networks:
      - netCapstone
 

  UserServiceAPI:
    container_name: UserServiceAPI
    build:
      dockerfile: Dockerfile
      context: ./userServiceAPI
    environment:
      - spring.application.name=UserServiceAPI
    #      context: Dockerfile # Path to the Dockerfile and application code
    image: userserviceapi:1
    restart: always
    hostname: UserServiceAPI
    ports:
      - "8080:8081"
    networks:
      - netCapstone
    depends_on:
      - CapstoneUserTest
      - CAPEurekaRegistry
      - CAPAPIGatewayOcelot
    # deploy:
    #   mode: replicated
    #   replicas: 2

  ChatService:
    container_name: ChatService
    build:
      context: ./chatservice
      dockerfile: Dockerfile
    image: chatservice:1
    restart: always
    hostname: chatservice
    ports:
      - "8084"
    networks:
      - netCapstone


#----------------------- TRASH------------------
#      - CapEureakRegistry
#      - CapOcelotGateway

#    UserService:
#      container_name: UserService
#      image: your-user-service-image
#      restart: always
#      depends_on:
#        - CAPMongoDB_UserService
#      networks:
#        - netCapstone

#    ChatServiceAPI:
#      container_name: ChatServiceAPI
#      build:
#        #      context: UserServiceAPI
#        dockerfile: Dockerfile
#      image: chat-service-api:1
#      restart: always
#      hostname: chatservice
#      ports:
#        - "8082:8083"
#      networks:
#        - netCapstone
#      depends_on:
#        - UserServiceAPI
#        - CAPMongoDB_UserService
#
#  rabbitmq:
#    image: rabbitmq:management
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    networks:
#      - netPRO290
#
# deploy:
#   mode: replicated
#   replicas: 2